language: r
cache: packages

matrix:
  - include:
    - os: linux
      dist: precise
      sudo: false
      r:  release
    - os: linux
      dist: trusty
      sudo: required
      r_check_args: '--use-valgrind'
      r: release
    - os: linux
      dist: trusty
      sudo: required
      env: R_CODECOV=true
      r: release
    - os: linux
      dist: trusty
      sudo: required
      r_check_args: '--as-cran'
      r: release
    - os: linux
      dist: trusty
      sudo: required
      r: devel
    - os: linux
      dist: trusty
      sudo: required
      r: oldrel
    - os: osx
      osx_image: xcode8
      before_install:
        - brew install libxml2
        - brew link --force libxml2
      latex: false
      r: release
      r_build_args: '--no-build-vignettes'
      r_check_args: '--ignore-vignettes --no-examples'
    - os: osx
      osx_image: beta-xcode6.1
      before_install:
        - brew install libxml2
        - brew link --force libxml2
      r: release
      r_build_args: '--no-build-vignettes'
      r_check_args: '--ignore-vignettes --no-examples'

before_install:
- if [[ "$TRAVIS_R_VERSION_STRING" = 'devel' ]]; then mkdir ~/.R && echo 'CXX1X=g++ -std=c++0x -g -O2 -fPIC' > ~/.R/Makevars; fi

addons:
  apt:
    packages:
    - libxml2-dev
    - valgrind

r_github_packages:
  - jimhester/covr
  - jimhester/lintr

r_packages:
  - xml2

after_success:
  - if [[ "${R_CODECOV}" && "$TRAVIS_R_VERSION_STRING" = 'release' ]]; then R -e 'covr::codecov()'; fi
  - if [[ "${R_CODECOV}" && "$TRAVIS_R_VERSION_STRING" = 'release' ]]; then R -e 'covr::coveralls()'; fi
  - if [[ "${R_LINTR}" && "$TRAVIS_R_VERSION_STRING" = 'release' ]]; then R -e 'lintr::lint_package()'; fi

notifications:
  webhooks:
    urls:
    - https://webhooks.gitter.im/e/d30a16d1ede5c5bf507d
    on_success: change
    on_failure: always
    on_start: never
  email: true
  slack:
    secure: s8K6lB/XutB7FPrkF0v+S8cgN33/pA0Vpg4auIYoEVhCfn2eNJIljvlJKouDDkavqx3kNk3esaJj7qTdcF6bNdUS6dI/w0KiBfU3PiFocQioniG55/obfgv6ymTDsl2z3K3Uh6wLHGcIc/OPdZqPrJVJw3ClLyXqXf9KmTM+SMvUOC31uEJXeKnvi1ErE48tFyVVRVC1Jgzs3rMi/MN4+DX9sKOoUcQ4qYfE4e8/SbCPNP7P29YbEh3naxPF1X6fyjH53k3ypCNTBoHbNM8Lc45S5WVvJI3v9ExNHBXa4rvT4VpIsOTd+lhkcNEyAQriWpPS/NYBTv2eP2LSyAH6jDFt2TkgUESod0RslCSwvlorEy9CTeV8nQGobsFQb7ej8bfSeiuVyK9KDBhYs8etnb1xF+M9v9qCiNNSo73DpWS7H9VE365hVa95fyaxr21oT91FRkf6q+ht6gsSbsOlXZunFiB5uCysMTPdLKLGyXa59AKp6Ml4kP/ywBeUD1S7nPYICERrXa9cAi86bV+49fb6Zvr4BS8gYHyneQmXT+ladY0CdrBaa+Upq9HGpeh80q24AWq2Q3C7ABJJfhOcYUX0rnAYgccGSsmu5HuZMvKbF79Wu6XpakAix+1PZ18zfdom9J1IYJSW488E4iWhbVNt90MHTkfFb9gZeDUT+0g=
